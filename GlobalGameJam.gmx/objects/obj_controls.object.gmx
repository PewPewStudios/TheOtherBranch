<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>config_step = 0

for(j=1 ; j&lt;=2 ; j++)
for(i=0 ; i&lt;32 ; i++)
    {
    jbutton_pressed[j,i] = 0
    jbutton_prev[j,i] = 0
    }

swap = false;

global.move_left[0] = 0
global.move_right[0] = 0
global.move_jump[0] = 0
global.move_up[0] = 0
global.move_down[0] = 0
global.move_wall_bounce[0] = 0
global.ghook[0] = 0

global.move_left[1] = 0
global.move_right[1] = 0
global.move_jump[1] = 0
global.move_up[1] = 0
global.move_down[1] = 0
global.move_wall_bounce[1] = 0
global.ghook[1] = 0

//KEY MAPPINGS
global.move_left_key[0] = vk_left
global.move_right_key[0] = vk_right
global.move_jump_key[0] = vk_up
global.move_up_key[0] = vk_up
global.move_down_key[0] = vk_down
global.move_wall_bounce_key[0] = vk_up
global.ghook_key[0] = vk_space

global.move_left_key[1] = ord("A")
global.move_right_key[1] = ord("D")
global.move_jump_key[1] = ord("W")
global.move_up_key[1] = ord("W")
global.move_down_key[1] = ord("S")
global.move_wall_bounce_key[1] = ord("W")
global.ghook_key[1] = ord("C")

blink = 1
blink_dir = -.1

controller = 0;
controlling = 0;

/*
global.players = 0
spawn_points = 0

player1X = obj_spawn_point.x;
player1Y = obj_spawn_point.y;

player2X = obj_spawn_point.x;
player2Y = obj_spawn_point.y;

if rm_level_design
{
    instance_create(224,960,obj_player)
    instance_create(1408,960,obj_player)
}
else 
{
    instance_create(player1X,player1Y,obj_player)
    instance_create(player2X,player2Y,obj_player)
}
global.p1spawnX = player1X;
global.p1spawnY = player1Y;

global.p2spawnX = player2X;
global.p2spawnY = player2Y; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if blink &gt;= 1
blink_dir =-.1
if blink &lt;= 0
blink_dir =.1
blink += blink_dir

if keyboard_check_pressed(vk_escape)
game_end()
/*
for(j=1 ; j&lt;=2 ; j++)
    {
    if joystick_exists(j)
    for(i=0 ; i&lt;joystick_buttons(j) ; i++)
        {
        
        if joystick_check_button(j,i) &amp;&amp; jbutton_prev[j,i] = 0
            {
            jbutton_pressed[j,i] = 1
            }
        else
            {
            jbutton_pressed[j,i] = 0
            }
        jbutton_prev[j,i] = joystick_check_button(j,i)
        }
    }
*/
global.move_left[0] = 0
global.move_right[0] = 0
global.move_jump[0] = 0
global.move_up[0] = 0
global.move_down[0] = 0
global.move_wall_bounce[0] = 0
global.action[0] = 0

global.move_left[1] = 0
global.move_right[1] = 0
global.move_jump[1] = 0
global.move_up[1] = 0
global.move_down[1] = 0
global.move_wall_bounce[1] = 0
global.action[1] = 0

global.swap = 0
if(global.playersPlaying = 1)
if(gamepad_is_connected(0))
{
    if(gamepad_button_check_pressed(0,global.change))
    {
    if(controlling = 0)
        {
        controlling = 1;
        }
    else
        {
        controlling = 0;
        }
    }   
}
for(i=0 ; i&lt;global.player_mode ; i++)
{
if(global.playersPlaying = 2)
    {
    controller = i;
    }
if global.player_controls[i] = CONTROLS_ARROWS
    {
    if keyboard_check(global.move_left_key[i])
        global.move_left[i] = 1
    if keyboard_check(global.move_right_key[i])
        global.move_right[i] = 1
    if keyboard_check(global.move_up_key[i])
        {
        global.move_jump[i] = 1
        global.move_up[i] = 1
        global.move_wall_bounce[i] = 1
        }
    if keyboard_check(global.move_down_key[i])
        global.move_down[i] = 1
    if keyboard_check_pressed(global.ghook_key[i]) //|| keyboard_check_pressed(vk_enter)
        global.action[i] = 1
    }
if global.player_controls[i] = CONTROLS_WASD
    {
    if keyboard_check(global.move_left_key[i])
        global.move_left[i] = 1
    if keyboard_check(global.move_right_key[i])
        global.move_right[i] = 1
    if keyboard_check(global.move_up_key[i])
        {
        global.move_jump[i] = 1
        global.move_up[i] = 1
        global.move_wall_bounce[i] = 1
        }
    if keyboard_check(global.move_down_key[i])
        global.move_down[i] = 1
    if keyboard_check_pressed(global.ghook_key[i])
        global.action[i] = 1
    }
if global.player_controls[i] = CONTROLS_GAMEPAD
    {
    if gamepad_axis_value(controller,gp_axislh) &lt; -.4
        global.move_left[controlling] = -gamepad_axis_value(controller,gp_axislh)
    if gamepad_axis_value(controller,gp_axislh) &gt; .4
        global.move_right[controlling] = gamepad_axis_value(controller,gp_axislh)
    if gamepad_axis_value(controller,gp_axislv) &lt; -.4
        global.move_up[controlling] = -gamepad_axis_value(controller,gp_axislv)
    if gamepad_axis_value(controller,gp_axislv) &gt; .4
        global.move_down[controlling] = gamepad_axis_value(controller,gp_axislv)
    global.move_jump[controlling] = gamepad_button_check(controller,gp_face1 )
    global.move_wall_bounce[controlling] = gamepad_button_check_pressed(controller, global.jump) //global.jump
    global.action[controlling] = gamepad_button_check_pressed(controller,global.shoot )
    }
if global.player_controls[i] = CONTROLS_J1
    {
    if abs(joystick_xpos(1)) &gt; .2
        global.move_left[i] = -joystick_xpos(1)
    if joystick_ypos(1) &lt; -.2
        global.move_up[i] = -joystick_ypos(1)
    if joystick_ypos(1) &gt; .2
        global.move_down[i] = joystick_ypos(1)
    global.move_jump[i] = joystick_check_button(1,2)
    global.move_wall_bounce[i] = joystick_check_button(1,2)
    global.action[i] = joystick_check_pressed(1,1)
    }
if global.player_controls[i] = CONTROLS_J2
    {
    if abs(joystick_xpos(2)) &gt; .2
        global.move_left[i] = -joystick_xpos(2)
    if joystick_ypos(2) &lt; -.2
        global.move_up[i] = -joystick_ypos(2)
    if joystick_ypos(2) &gt; .2
        global.move_down[i] = joystick_ypos(2)
    global.move_jump[i] = joystick_check_button(2,2)
    global.move_wall_bounce[i] = joystick_check_button(2,2)
    global.action[i] = joystick_check_pressed(2,1)
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_controls_config
    {
    room_goto_next()
    draw_set_font(fnt_main_menu_main)
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_set_color(c_white)
    if keyboard_check_pressed(ord("1"))
    {
    room_goto_next()
    exit
    }
    if config_step = 11
        {
        str = "Player 2 Control Configuration Complete!##Press any key to save these settings and continue to the main menu.#To change these setting later, simply delete the controls.txt file in the game folder."
        if keyboard_check_pressed(vk_anykey)
            {
            fid = file_text_open_write("controls.txt")
            str = ""
            str+=scr_next_out(0)
            file_text_write_string(fid,str)
            file_text_close(fid)
            room_goto_next()
            }
        }
        
    if config_step = 10
        {
        str = "Player 2 Press the Fire Grappling Hook Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.ghook_key[1] = keyboard_lastkey
            }
        }
    
    if config_step = 9
        {
        str = "Player 2 Press the Down Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_down_key[1] = keyboard_lastkey
            }
        }
        
    if config_step = 8
        {
        str = "Player 2 Press the Jump Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_up_key[1] = keyboard_lastkey
            global.move_wall_bounce_key[1] = keyboard_lastkey
            global.move_jump_key[1] = keyboard_lastkey
            }
        }
    
    if config_step = 7
        {
        str = "Player 2 Press the Move Right Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_right_key[1] = keyboard_lastkey
            }
        }
    
    if config_step = 6
        {
        str = "Player 2 Press the Move Left Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_left_key[1] = keyboard_lastkey
            }
        }
    
    if config_step = 5
        {
        str = "Player 1 Control Configuration Complete!##Press Any Key to Continue to Player 2 Configuration"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            }
        }
    
    if config_step = 4
        {
        str = "Player 1 Press the Fire Grappling Hook Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.ghook_key[0] = keyboard_lastkey
            }
        }
    
    if config_step = 3
        {
        str = "Player 1 Press the Down Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_down_key[0] = keyboard_lastkey
            }
        }
    
    if config_step = 2
        {
        str = "Player 1 Press the Jump Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_up_key[0] = keyboard_lastkey
            }
        }
    
    if config_step = 1
        {
        str = "Player 1 Press the Move Right Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_right_key[0] = keyboard_lastkey
            }
        }
    
    if config_step = 0
        {
        str = "Player 1 Press the Move Left Button"
        if keyboard_check_pressed(vk_anykey)
            {
            config_step++
            global.move_left_key[0] = keyboard_lastkey
            }
        }
    
    draw_sprite_ext(spr_controls_config,config_step,room_width/2,room_height/2-128,1,1,blink * 10 - 5,c_white,blink)
    draw_text(room_width/2,room_height/2+128,str)
    draw_text(room_width/2,64,"Configure Controls")
    //"Control Configurations##You will only have to do this once on this machine##"+
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
